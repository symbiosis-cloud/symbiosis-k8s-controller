name: Test and publish

on: [push, pull_request]

jobs:
  check-gh-token:
    runs-on: ubuntu-latest
    outputs:
        gh-token: ${{ steps.gh-token.outputs.defined }}
    steps:
        - id: gh-token
          env:
              MY_KEY: ${{ secrets.GITHUB_TOKEN }}
          if: "${{ env.MY_KEY != '' }}"
          run: echo "::set-output name=defined::true"

  lint:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-go@v2
      with:
        go-version: 1.17
        stable: true

    - name: install and run golangci-lint
      uses: golangci/golangci-lint-action@v2.5.2
      with:
        version: v1.43.0
        skip-go-installation: true
        args: --timeout=3m

  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-go@v2
        with:
          go-version: 1.17
          stable: true

      - name: Download K8s envtest - local K8s cluster control plane
        run: |
          go install sigs.k8s.io/controller-runtime/tools/setup-envtest@latest
          mkdir -p local/envtest-bin/
          setup-envtest use -p env 1.22.x --bin-dir local/envtest-bin > local/envtest-bin/env

      - name: Run Unit tests
        run: |
          source local/envtest-bin/env
          export KUBEBUILDER_ASSETS=$(pwd)/$KUBEBUILDER_ASSETS
          go test -race -covermode atomic -coverprofile=profile.cov ./...

      - name: Send coverage
        env:
          COVERALLS_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          go install github.com/mattn/goveralls@v0.0.11
          goveralls -coverprofile=profile.cov -service=github

  publish-tagged:
    needs:
    - lint
    - test
    - check-gh-token
    if: |
      startsWith(github.ref, 'refs/tags/v') &&
      !github.event.pull_request.head.repo.fork &&
      needs.check-gh-token.outputs.gh-token == 'true'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-go@v2
        with:
          go-version: 1.17
          stable: true
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: symbiosiscloud
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - uses: imjasonh/setup-ko@v0.4
        name: Setup ko
        env:
          KO_DOCKER_REPO: docker.io/symbiosiscloud
      - name: Run ko publish
        run: |
          export REF=${{ github.ref }}
          export COMMIT=${{ github.sha }}
          export TAG=$(echo ${{ github.ref }} | cut -d "/" -f 3 - )
          ko publish ./cmd/symbiosis-k8s-controller/ --base-import-paths --platform=linux/amd64,linux/arm64,linux/arm --tags $TAG

  publish-untagged:
    needs:
    - lint
    - test
    - check-gh-token
    if: |
      !startsWith(github.ref, 'refs/tags/v') &&
      !github.event.pull_request.head.repo.fork &&
      needs.check-gh-token.outputs.gh-token == 'true'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-go@v2
        with:
          go-version: 1.17
          stable: true

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: symbiosiscloud
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - uses: imjasonh/setup-ko@v0.4
        name: Setup ko
        env:
          KO_DOCKER_REPO: docker.io/symbiosiscloud
      - name: Run ko publish
        run: |
          export REF=${{ github.ref}}
          export COMMIT=${{ github.sha}}
          ko publish ./cmd/symbiosis-k8s-controller/ --base-import-paths --platform=linux/amd64,linux/arm64,linux/arm
